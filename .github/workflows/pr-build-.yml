name: Katchup Server CI

on:
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: gradle

      - name: create application-aws file
        working-directory: ./
        run: |
          pwd
          mkdir src/main/resources
          touch src/main/resources/application-aws.yml
          echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> src/main/resources/application-aws.yml
          echo AWS_REGION=${{ secrets.AWS_REGION }} >> src/main/resources/application-aws.yml
          echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} >> src/main/resources/application-aws.yml
          echo S3_BUCKET=${{ secrets.S3_BUCKET }} >> src/main/resources/application-aws.yml
          cat src/main/resources/application-aws.yml

      - name: create .env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo "${{ secrets.ENV }}" >> .env
          cat .env

      - name: Create application.yml
        run: |
          pwd
          touch src/main/resources/application.yml
          echo "${{ secrets.APPLICATION_YML }}" >> src/main/resources/application.yml
          cat src/main/resources/application.yml

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

      - name: Docker Build and Push
        run: |
          run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_NAME }}" --password-stdin
          docker build -f Dockerfile -t ${{ secrets.DOCKER_NAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest .
          docker push ${{ secrets.DOCKER_NAME }}/${{ secrets.DOCKER_REPOSITORY }}
